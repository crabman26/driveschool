import java.awt.Toolkit;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author crabman
 */
public class LessonsDelete extends javax.swing.JFrame {

    String str1;
   String Table_click,Table_click1,Table_click2;
   Object o1;
    
 private static LessonsDelete obj=null;
  
    private LessonsDelete() {
      
        initComponents();
        filltable();
        setResizable(false);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(LessonsDelete.DO_NOTHING_ON_CLOSE);
        setIcon();
    }

    
     public static LessonsDelete getObj(){
        if(obj==null){
            obj=new LessonsDelete();
        }return obj;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        combobox = new javax.swing.JComboBox();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        TheoriticalLessons2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        delete_buttοn = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        PracticalLessons2 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("ΔΙΑΓΡΑΦΗ ΜΑΘΗΜΑΤΟΣ");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jButton2.setText("ΔΙΑΓΡΑΦΗ ΠΡΑΚΤΙΚΟΥ");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        TheoriticalLessons2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        TheoriticalLessons2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TheoriticalLessons2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(TheoriticalLessons2);

        jLabel1.setText("ΟΝΟΜΑΤΕΠΩΝΥΜΟ ΜΑΘΗΤΗ");

        jButton1.setText("ΑΝΑΖΗΤΗΣΗ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        delete_buttοn.setText(" ΔΙΑΓΡΑΦΗ ΘΕΩΡΗΤΙΚΟΥ");
        delete_buttοn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_buttοnActionPerformed(evt);
            }
        });

        PracticalLessons2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        PracticalLessons2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PracticalLessons2MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(PracticalLessons2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(combobox, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane2)
                        .addComponent(delete_buttοn, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 853, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(combobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(26, 26, 26)
                .addComponent(delete_buttοn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try{
             Class.forName("org.sqlite.JDBC");
            String sourceURL=new String("jdbc:sqlite:driveschool.sqlite");
            java.sql.Connection ConnectiondatabaseConnection = DriverManager.getConnection(sourceURL);
            
            String Message="Είστε σίγουρος για την διαγραφή του μαθηματος??";
            
            String sql2="DELETE FROM practical  WHERE `Ημερομηνία_Πρακτικού`='"+Table_click+"'AND `Ωρα_Έναρξης`='"+Table_click1+"' AND `Ωρα_Λήξης`='"+Table_click2+"' ";

            
            
            PreparedStatement pst = ConnectiondatabaseConnection.prepareStatement(sql2);

            pst.execute();
            pst.close();
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(null,Message);

        }
        catch (SQLException ex) {
            Logger.getLogger(Calendar.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Calendar.class.getName()).log(Level.SEVERE, null, ex);
        }
        

    }//GEN-LAST:event_jButton2ActionPerformed

    private void TheoriticalLessons2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TheoriticalLessons2MouseClicked
        try{
            int row=TheoriticalLessons2.getSelectedRow();
            Table_click=(TheoriticalLessons2.getModel().getValueAt(row,2).toString());
            Table_click1=(TheoriticalLessons2.getModel().getValueAt(row,3).toString());
            Table_click2=(TheoriticalLessons2.getModel().getValueAt(row,4).toString());

             Class.forName("org.sqlite.JDBC");
            String sourceURL=new String("jdbc:sqlite:driveschool.sqlite");
            java.sql.Connection ConnectiondatabaseConnection = DriverManager.getConnection(sourceURL);
            Statement statement=ConnectiondatabaseConnection.createStatement();
            String sql="SELECT * FROM theoritical  WHERE `Ημερομηνία_Θεωρητικού`='"+Table_click+"'AND `Ωρα_Έναρξης`='"+Table_click1+"' AND `Ώρα_Λήξης`='"+Table_click2+"' ";

            ResultSet result=statement.executeQuery(sql);
            result.close();
        }catch(ClassNotFoundException e1){
            System.out.println(e1);
        }
        catch(SQLException e2){
            System.out.println(e2);
            /**
            * @param args the command line arguments
            */
        }
    }//GEN-LAST:event_TheoriticalLessons2MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {

            // TODO add your handling code here:
            o1=combobox.getSelectedItem();
            str1=String.valueOf(o1);

            if (!str1.startsWith("'"))
            str1 = "'" + str1;

            if (!str1.endsWith("'"))
            str1 = str1 + "'";

             Class.forName("org.sqlite.JDBC");
            String sourceURL=new String("jdbc:sqlite:driveschool.sqlite");
            java.sql.Connection ConnectiondatabaseConnection = DriverManager.getConnection(sourceURL);
            Statement statement=ConnectiondatabaseConnection.createStatement();
            String sql="SELECT `Ονοματεπώνυμο`,`Κατηγορία`,`Ημερομηνία_Θεωρητικού`,`Ωρα_Έναρξης`,`Ώρα_Λήξης` FROM theoritical  WHERE theoritical.`Ονοματεπώνυμο` ="+str1;
            ResultSet result=statement.executeQuery(sql);
            
            TheoriticalLessons2.setModel(DbUtils.resultSetToTableModel(result));
            result.close();
            Statement statement2=ConnectiondatabaseConnection.createStatement();
            String sql2="SELECT `Ονοματεπώνυμο`,`Κατηγορία`,practical.`Ημερομηνία_Πρακτικού`,practical.`Ωρα_Έναρξης`,practical.Ωρα_Λήξης FROM  practical  WHERE practical.`Ονοματεπώνυμο` ="+str1;
            ResultSet result2=statement2.executeQuery(sql2);
            
            PracticalLessons2.setModel(DbUtils.resultSetToTableModel(result2));
            result2.close();
            ConnectiondatabaseConnection.close();
        } catch (SQLException ex) {
            Logger.getLogger(Calendar.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Calendar.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void delete_buttοnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_buttοnActionPerformed
        try{
             Class.forName("org.sqlite.JDBC");
            String sourceURL=new String("jdbc:sqlite:driveschool.sqlite");
            java.sql.Connection ConnectiondatabaseConnection = DriverManager.getConnection(sourceURL);
           
           

            String Message="Είστε σίγουρος για την διαγραφή του μαθηματος??";
            
            String sql3="DELETE  FROM theoritical  WHERE `Ημερομηνία_Θεωρητικού`='"+Table_click+"'AND `Ωρα_Έναρξης`='"+Table_click1+"' AND `Ώρα_Λήξης`='"+Table_click2+"' ";
             PreparedStatement pst2 = ConnectiondatabaseConnection.prepareStatement(sql3);

            pst2.execute();
           
            

            pst2.close();
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(null,Message);

        }
        catch (SQLException ex) {
            Logger.getLogger(Calendar.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Calendar.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_delete_buttοnActionPerformed

    private void PracticalLessons2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PracticalLessons2MouseClicked
        try{
            int row=PracticalLessons2.getSelectedRow();
            Table_click=(PracticalLessons2.getModel().getValueAt(row,2).toString());
            Table_click1=(PracticalLessons2.getModel().getValueAt(row,3).toString());
            Table_click2=(PracticalLessons2.getModel().getValueAt(row,4).toString());

            Class.forName("com.mysql.jdbc.Driver");
            String sourceURL=new String("jdbc:mysql://localhost:3306/test?characterEncoding=Greek");
            java.sql.Connection ConnectiondatabaseConnection = DriverManager.getConnection(sourceURL);
            Statement statement=ConnectiondatabaseConnection.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,
                ResultSet.CONCUR_UPDATABLE);
            String sql="SELECT * FROM practical  WHERE `Ημερομηνία_Πρακτικού`='"+Table_click+"'AND `Ωρα_Έναρξης`='"+Table_click1+"' AND `Ωρα_Λήξης`='"+Table_click2+"' ";
            ResultSet result=statement.executeQuery(sql);
            result.close();
        }catch(ClassNotFoundException e1){
            System.out.println(e1);
        }
        catch(SQLException e2){
            System.out.println(e2);
            /**
            * @param args the command line arguments
            */
        }
    }//GEN-LAST:event_PracticalLessons2MouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        
        
        int selectedOption = JOptionPane.showConfirmDialog(null, "Do you wanna close the window?", "Choose", 
                                  JOptionPane.YES_NO_OPTION); 
        if (selectedOption == JOptionPane.YES_OPTION) 
        {
            setVisible(false);
            dispose();
        }
        if (selectedOption == JOptionPane.NO_OPTION){
    
}
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LessonsDelete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LessonsDelete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LessonsDelete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LessonsDelete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LessonsDelete().setVisible(true);
            }
        });
    }
     private void setIcon() {
         setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("car.png")));
    }
    private void filltable(){
    try{
        
         Class.forName("org.sqlite.JDBC");
         String sourceURL=new String("jdbc:sqlite:driveschool.sqlite");
	java.sql.Connection ConnectiondatabaseConnection = DriverManager.getConnection(sourceURL);
	Statement statement=ConnectiondatabaseConnection.createStatement();

	String sql="SELECT * FROM students; ";
	ResultSet result=statement.executeQuery(sql);
        
        while(result.next()){
            String surname=result.getString("Επώνυμο");
            String name=result.getString("Όνομα");
            String fullname=name +" "+ surname;
            combobox.addItem(fullname);
        }
        
	ConnectiondatabaseConnection.close();
        
        
    }catch(Exception e1){
       System.out.println(e1); 
    };
    
}
    private void displayresult(ResultSet result){
        try{
        String a1=result.getString(1);
        }
        catch (SQLException ex) {
            Logger.getLogger(Calendar.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable PracticalLessons2;
    private javax.swing.JTable TheoriticalLessons2;
    private javax.swing.JComboBox combobox;
    private javax.swing.JButton delete_buttοn;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
